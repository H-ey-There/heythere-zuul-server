
spring:
  application:
    name: heythere-zuul-server
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    jpa:
      database: h2
      database-platform: org.hibernate.dialect.H2Dialect
      generate-ddl: true
    h2:
      console:
        enabled: true
        path: /h2
  kafka:
    template:
      default-topic: library-events
    consumer:
      bootstrap-servers: 3.34.46.47:9092,3.34.46.47:9093,3.34.46.47:9094
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: library-events-listener-group
    producer:
      bootstrap-servers: 3.34.46.47:9092,3.34.46.47:9093,3.34.46.47:9094
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        acks: all
        retries: 10
        retry.backoff.ms: 1000

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: '408019739663-36iqjm145hgs48nsqcjsa1nh9ehml9q8.apps.googleusercontent.com'
            client-secret: 'Tl4vClaAAqC71o9rGcjfZsRJ'
            redirectUri: "/login/oauth2/code/google"
            #redirectUri: "http://localhost:3000"
            scope:
              - email
              - profile
  servlet:
    multipart:
      max-request-size: 1000MB
      max-file-size: 1000MB



server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream


zuul:
  ignored-headers: Access-Control-Allow-Credentials, Access-Control-Allow-Origin
  routes:
#    auth-server:
#      path: /auth/**
#      url: http://localhost:8082
    heythere-community-server:
      path: /community/**
      url: http://15.164.96.218:8081
    heythere-video-streaming-server:
      path: /video/**
      url: http://3.34.52.39:8082
    heythere-mail-server:
      path: /mail/**
      url: http://52.79.235.18:8083
    heythere-user-server:
      path: /user/**
      url: http://localhost:8084
    heythere-chat-room-server:
      path: /room/**
      url: http://localhost:8087
  prefix: /api
  host:
    connect-timeout-millis: 100000
    socket-timeout-millis: 100000


app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect4t
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect

eureka:
  client:
    serviceUrl:
      defaultZone: http://3.35.49.66:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

    #service-url: http://localhost:8080/eureka
springdoc:
  swagger-ui:
    path: /swagger
    operations-sorter: method
  api-docs:
    enabled: true
